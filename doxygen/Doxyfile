# The PROJECT_NAME tag is a single word (or sequence of words) that should 
# identify the project. Note that if you do not use Doxywizard you need 
# to put quotes around the project name if it contains spaces.

# For config item PROJECT_NAME, default is My Project
PROJECT_NAME           = vrpn

# Using the PROJECT_BRIEF tag one can provide an optional one line description 
# for a project that appears at the top of each page and should give viewer 
# a quick idea about the purpose of the project. Keep the description short.

# For config item PROJECT_BRIEF, default is 
PROJECT_BRIEF          = "Virtual Reality Peripheral Network"

# If the FULL_PATH_NAMES tag is set to YES then Doxygen will prepend the full 
# path before files name in the file list and in the header files. If set 
# to NO the shortest path that makes the file name unique will be used.

# For config item FULL_PATH_NAMES, default is 1
FULL_PATH_NAMES        = NO

# If the JAVADOC_AUTOBRIEF tag is set to YES then Doxygen 
# will interpret the first line (until the first dot) of a JavaDoc-style 
# comment as the brief description. If set to NO, the JavaDoc 
# comments will behave just like regular Qt-style comments 
# (thus requiring an explicit @brief command for a brief description.)

# For config item JAVADOC_AUTOBRIEF, default is 0
JAVADOC_AUTOBRIEF      = YES

# If the QT_AUTOBRIEF tag is set to YES then Doxygen will 
# interpret the first line (until the first dot) of a Qt-style 
# comment as the brief description. If set to NO, the comments 
# will behave just like regular Qt-style comments (thus requiring 
# an explicit \brief command for a brief description.)

# For config item QT_AUTOBRIEF, default is 0
QT_AUTOBRIEF           = YES

# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make Doxygen 
# treat a multi-line C++ special comment block (i.e. a block of //! or /// 
# comments) as a brief description. This used to be the default behaviour. 
# The new default is to treat a multi-line C++ comment block as a detailed 
# description. Set this tag to YES if you prefer the old behaviour instead.

# For config item MULTILINE_CPP_IS_BRIEF, default is 0
MULTILINE_CPP_IS_BRIEF = YES

# If you use STL classes (i.e. std::string, std::vector, etc.) but do not want 
# to include (a tag file for) the STL sources as input, then you should 
# set this tag to YES in order to let doxygen match functions declarations and 
# definitions whose arguments contain STL classes (e.g. func(std::string); v.s. 
# func(std::string) {}). This also makes the inheritance and collaboration 
# diagrams that involve STL classes more complete and accurate.

# For config item BUILTIN_STL_SUPPORT, default is 0
BUILTIN_STL_SUPPORT    = YES

# When TYPEDEF_HIDES_STRUCT is enabled, a typedef of a struct, union, or enum 
# is documented as struct, union, or enum with the name of the typedef. So 
# typedef struct TypeS {} TypeT, will appear in the documentation as a struct 
# with name TypeT. When disabled the typedef will appear as a member of a file, 
# namespace, or class. And the struct will be named TypeS. This can typically 
# be useful for C code in case the coding convention dictates that all compound 
# types are typedef'ed and only the typedef is referenced, never the tag name.

# For config item TYPEDEF_HIDES_STRUCT, default is 0
TYPEDEF_HIDES_STRUCT   = YES

#---------------------------------------------------------------------------
# Build related configuration options
#---------------------------------------------------------------------------

# If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in 
# documentation are documented, even if no documentation was available. 
# Private class members and static file members will be hidden unless 
# the EXTRACT_PRIVATE and EXTRACT_STATIC tags are set to YES

# For config item EXTRACT_ALL, default is 0
EXTRACT_ALL            = YES

# If the EXTRACT_LOCAL_CLASSES tag is set to YES classes (and structs) 
# defined locally in source files will be included in the documentation. 
# If set to NO only classes defined in header files are included.

# For config item EXTRACT_LOCAL_CLASSES, default is 1
EXTRACT_LOCAL_CLASSES  = NO

#---------------------------------------------------------------------------
# configuration options related to the input files
#---------------------------------------------------------------------------

# The INPUT tag can be used to specify the files and/or directories that contain 
# documented source files. You may enter file names like "myfile.cpp" or 
# directories like "/usr/src/myproject". Separate the files or directories 
# with spaces.

# For config item INPUT, default is 
INPUT                  = ..

# If the value of the INPUT tag contains directories, you can use the 
# FILE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp 
# and *.h) to filter out the source-files in the directories. If left 
# blank the following patterns are tested: 
# *.c *.cc *.cxx *.cpp *.c++ *.d *.java *.ii *.ixx *.ipp *.i++ *.inl *.h *.hh 
# *.hxx *.hpp *.h++ *.idl *.odl *.cs *.php *.php3 *.inc *.m *.mm *.dox *.py 
# *.f90 *.f *.for *.vhd *.vhdl

# For config item FILE_PATTERNS, default is 
FILE_PATTERNS          = *.h \
                         *.C

#---------------------------------------------------------------------------
# configuration options related to source browsing
#---------------------------------------------------------------------------

# If the SOURCE_BROWSER tag is set to YES then a list of source files will 
# be generated. Documented entities will be cross-referenced with these sources. 
# Note: To get rid of all source code in the generated output, make sure also 
# VERBATIM_HEADERS is set to NO.

# For config item SOURCE_BROWSER, default is 0
SOURCE_BROWSER         = YES

# If the REFERENCED_BY_RELATION tag is set to YES 
# then for each documented function all documented 
# functions referencing it will be listed.

# For config item REFERENCED_BY_RELATION, default is 0
REFERENCED_BY_RELATION = YES

# If the REFERENCES_RELATION tag is set to YES 
# then for each documented function all documented entities 
# called/used by that function will be listed.

# For config item REFERENCES_RELATION, default is 0
REFERENCES_RELATION    = YES

# The GENERATE_TREEVIEW tag is used to specify whether a tree-like index 
# structure should be generated to display hierarchical information. 
# If the tag value is set to YES, a side panel will be generated 
# containing a tree-like index structure (just like the one that 
# is generated for HTML Help). For this to work a browser that supports 
# JavaScript, DHTML, CSS and frames is required (i.e. any modern browser). 
# Windows users are probably better off using the HTML help feature. 
# Since the tree basically has the same information as the tab index you 
# could consider to set DISABLE_INDEX to NO when enabling this option.

# For config item GENERATE_TREEVIEW, default is 0
GENERATE_TREEVIEW      = YES

# The PAPER_TYPE tag can be used to set the paper type that is used 
# by the printer. Possible values are: a4, letter, legal and 
# executive. If left blank a4wide will be used.

# For config item PAPER_TYPE, default is a4
PAPER_TYPE             = letter

#---------------------------------------------------------------------------
# configuration options related to the man page output
#---------------------------------------------------------------------------

# If the GENERATE_MAN tag is set to YES (the default) Doxygen will 
# generate man pages

# For config item GENERATE_MAN, default is 0
GENERATE_MAN           = YES

# The PREDEFINED tag can be used to specify one or more macro names that 
# are defined before the preprocessor is started (similar to the -D option of 
# gcc). The argument of the tag is a list of macros of the form: name 
# or name=definition (no spaces). If the definition and the = are 
# omitted =1 is assumed. To prevent a macro definition from being 
# undefined via #undef or recursively expanded use the := operator 
# instead of the = operator.

# For config item PREDEFINED, default is 
PREDEFINED             = VRPN_USE_PHANTOM_SERVER \
                         VRPN_USE_DIRECTINPUT \
                         VRPN_USE_DIRECTSHOW \
                         VRPN_INCLUDE_INTERSENSE \
                         VRPN_USE_NATIONAL_INSTRUMENTS \
                         VRPN_USE_NATIONAL_INSTRUMENTS_MX \
                         VRPN_USE_USDIGITAL \
                         VRPN_USE_MICROSCRIBE \
                         VRPN_INCLUDE_PHASESPACE \
                         VRPN_USE_GPM_MOUSE \
                         VRPN_USE_MOTIONNODE \
                         VRPN_USE_WIIUSE \
                         VRPN_USE_FREESPACE \
                         VRPN_USE_TRIVISIOCOLIBRI \
                         VRPN_USE_HID \
                         VRPN_USE_LIBUSB_1_0

#---------------------------------------------------------------------------
# Configuration options related to the dot tool
#---------------------------------------------------------------------------

# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is 
# available from the path. This tool is part of Graphviz, a graph visualization 
# toolkit from AT&T and Lucent Bell Labs. The other options in this section 
# have no effect if this option is set to NO (the default)

# For config item HAVE_DOT, default is 0
HAVE_DOT               = YES

# If the CALL_GRAPH and HAVE_DOT options are set to YES then 
# doxygen will generate a call dependency graph for every global function 
# or class method. Note that enabling this option will significantly increase 
# the time of a run. So in most cases it will be better to enable call graphs 
# for selected functions only using the \callgraph command.

# For config item CALL_GRAPH, default is 0
CALL_GRAPH             = YES

# If the CALLER_GRAPH and HAVE_DOT tags are set to YES then 
# doxygen will generate a caller dependency graph for every global function 
# or class method. Note that enabling this option will significantly increase 
# the time of a run. So in most cases it will be better to enable caller 
# graphs for selected functions only using the \callergraph command.

# For config item CALLER_GRAPH, default is 0
CALLER_GRAPH           = NO

